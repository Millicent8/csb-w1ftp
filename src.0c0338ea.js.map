{"version":3,"sources":["src/index.js"],"names":["now","Date","formateTime","currentHour","document","querySelector","hour","getHours","minutes","getMinutes","innerHTML","formateDate","days","day","getDay","month","getMonth","date","getDate","year","getFullYear","showCurrentTemperature","response","data","name","celciusTemperature","Math","round","main","temp","celciusMin","temp_min","search","city","apiKey","apiUrl","defaultUnit","axios","get","then","isCity","event","preventDefault","location","value","newCity","showFarenheitTemperature","farenheitTemperature","farenheitMin","farenheit","unitF","addEventListener","changeTemperature","showCelciusTemperature","temperature","temperatureMin","isCelcius","unitC","returnTemperature","showLocationTemperature","tempMin","currentLocale","position","latitude","coords","longitude","units","isLocation","navigator","geolocation","getCurrentPosition","getCurrentTemp"],"mappings":"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","file":"src.0c0338ea.js","sourceRoot":"..","sourcesContent":["let now = new Date();\n\nfunction formateTime() {\n  let currentHour = document.querySelector(\"#current-Time\");\n  let hour = now.getHours();\n  let minutes = now.getMinutes();\n  currentHour.innerHTML = `${hour}:${minutes}`;\n}\n\nformateTime();\n\nfunction formateDate() {\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"Aug\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let day = days[now.getDay()];\n  let month = months[now.getMonth()];\n  let date = now.getDate();\n  let year = now.getFullYear();\n  let currentDay = document.querySelector(\"#current-Date\");\n  currentDay.innerHTML = `${day} ${date} ${month} ${year}`;\n}\n\nformateDate();\n\nfunction showCurrentTemperature(response) {\n  document.querySelector(\"#current-City\").innerHTML = response.data.name;\n  let celciusTemperature = Math.round(response.data.main.temp);\n  let celciusMin = Math.round(response.data.main.temp_min);\n  let replacmentTemperature = document.querySelector(\"#automatic-reading\");\n  replacmentTemperature.innerHTML = `${celciusTemperature}°C | ${celciusMin}°C`;\n}\n\nfunction search(city) {\n  let apiKey = \"25c5997bc71299b7ffa2b6572f41f1d0\";\n  let defaultUnit = \"metric\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${defaultUnit}`;\n  axios.get(`${apiUrl}`).then(showCurrentTemperature);\n}\n\nfunction isCity(event) {\n  event.preventDefault();\n  let apiKey = \"25c5997bc71299b7ffa2b6572f41f1d0\";\n  let defaultUnit = \"metric\";\n  let location = document.querySelector(\"#new-City\");\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location.value}&appid=${apiKey}&units=${defaultUnit}`;\n  axios.get(`${apiUrl}`).then(showCurrentTemperature);\n}\n\nlet newCity = document.querySelector(\"#city-Search\");\nnewCity.addEventListener(\"submit\", isCity);\n\nfunction showFarenheitTemperature(response) {\n  let farenheitTemperature = Math.round(response.data.main.temp);\n  let farenheitMin = Math.round(response.data.main.temp_min);\n  document.querySelector(\n    \"#automatic-reading\"\n  ).innerHTML = `${farenheitTemperature}°F | ${farenheitMin}°F`;\n}\n\nfunction farenheit(event) {\n  event.preventDefault();\n  let apiKey = \"25c5997bc71299b7ffa2b6572f41f1d0\";\n  let unitF = \"imperial\";\n  let location = document.querySelector(\"#new-City\");\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location.value}&appid=${apiKey}&units=${unitF}`;\n  axios.get(`${apiUrl}`).then(showFarenheitTemperature);\n}\n\nlet changeTemperature = document.querySelector(\"#farenheit\");\nchangeTemperature.addEventListener(\"click\", farenheit);\n\nfunction showCelciusTemperature(response) {\n  let temperature = response.data.main.temp;\n  let temperatureMin = Math.round(response.data.main.temp_min);\n  document.querySelector(\n    \"#automatic-reading\"\n  ).innerHTML = `${temperature}°C | ${temperatureMin}°C`;\n}\nfunction isCelcius(event) {\n  event.preventDefault();\n  let apiKey = \"25c5997bc71299b7ffa2b6572f41f1d0\";\n  let unitC = \"metric\";\n  let location = document.querySelector(\"#new-City\");\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${location.value}&appid=${apiKey}&units=${unitC}`;\n  axios.get(apiUrl).then(showCelciusTemperature);\n}\n\nlet returnTemperature = document.querySelector(\"#celcius\");\nreturnTemperature.addEventListener(\"click\", isCelcius);\n\nfunction showLocationTemperature(response) {\n  let temp = Math.round(response.data.main.temp);\n  let tempMin = Math.round(response.data.main.temp_min);\n  document.querySelector(\n    \"#automatic-reading\"\n  ).innerHTML = `${temp}°C | ${tempMin}°C`;\n}\nfunction currentLocale(position) {\n  let latitude = position.coords.latitude;\n  let longitude = position.coords.longitude;\n  let apiKey = \"25c5997bc71299b7ffa2b6572f41f1d0\";\n  let units = \"metric\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${apiKey}&units=${units}`;\n  axios.get(apiUrl).then(showLocationTemperature);\n}\n\nfunction isLocation(event) {\n  event.preventDefault();\n  navigator.geolocation.getCurrentPosition(currentLocale);\n}\n\nlet getCurrentTemp = document.querySelector(\"#Location\");\ngetCurrentTemp.addEventListener(\"click\", isLocation);\n\nsearch(\"London\");\n"]}